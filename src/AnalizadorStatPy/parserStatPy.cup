package AnalizadorStatPy;
import java_cup.runtime.*;
import statpyconverter.Config;

//PARSER 
parser code
{:  

    Config cf = new Config();

    public void syntax_error(Symbol s){
        System.out.println("Error R de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

    public void unrecovered_syntax_error(Symbol s) throws java.lang.Exception{ 
        System.out.println("Error NR de sintaxis: "+ s.value +" Linea "+(s.left+1)+" columna "+(s.right+1) );
    }

    public void asignarFunciones(String tipo, String sentencias){
        cf.translateStatPy(tipo,sentencias);
    }

:}

//TERMINALES
terminal String PTCOMA,PAR_IZQ,PAR_DER,COR_IZQ,COR_DER;
terminal String MAS,MENOS,POR,DIV;
terminal String ENTERO;
terminal String DECIMAL;
terminal String UMENOS;
terminal String varINT,varDOUBLE,varCHAR,varBOOL,varSTRING,VAR;
terminal String LLI,LLC,wVoid;
terminal String wMain;

//NO_TERMINALES
non terminal ini;
non terminal instrucciones;
non terminal instruccion;
non terminal Double expresion;
non terminal main;

//PRECEDENCIA_DE_OPERADORES
precedence left MAS,MENOS;
precedence left POR,DIV;
precedence right UMENOS;

start with ini;

ini::=instrucciones;

instrucciones ::= instruccion instrucciones
 | instruccion
; 

instruccion ::= 
    main
   | error
;

main ::=
    wVoid wMain PAR_IZQ PAR_DER LLI expresion:a LLC {: RESULT=a; asignarFunciones("main",String.valueOf(a));  :}
;


expresion  ::= 
    MENOS expresion:a                      {:RESULT=a*-1;:}%prec UMENOS  
 |  expresion:a MAS        expresion:b     {:RESULT=a+b;:}
 |  expresion:a MENOS      expresion:b     {:RESULT=a-b;:}
 |  expresion:a POR        expresion:b     {:RESULT=a*b;:}
 |  expresion:a DIV   expresion:b     {:RESULT=a/b;:}
 |  ENTERO:a                               {:RESULT=new Double(a);:}
 |  DECIMAL:a                              {:RESULT=new Double(a);:}
 |  PAR_IZQ expresion:a PAR_DER              {:RESULT=a;:}
;